Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                              TimersGCC644.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(fputs.o)
                              TimersGCC644.o (fputs)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(iob.o)
                              TimersGCC644.o (__iob)

Allocating common symbols
Common symbol       size              file

T1poll              0x2               TimersGCC644.o
lastT1poll          0x2               TimersGCC644.o
lastT1capture       0x2               TimersGCC644.o
tsk1m1              0x2               TimersGCC644.o
time1               0x2               TimersGCC644.o
lastACObit          0x1               TimersGCC644.o
T1capture           0x2               TimersGCC644.o
time3               0x2               TimersGCC644.o
period              0x2               TimersGCC644.o
periodPoll          0x2               TimersGCC644.o
ACObit              0x1               TimersGCC644.o
time2               0x2               TimersGCC644.o
__iob               0x6               c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(iob.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
LOAD lab1.o
LOAD TimersGCC644.o
LOAD uart.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x4e0
 *(.vectors)
 .vectors       0x00000000       0x8c c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x00000098                __do_copy_data
 .init4         0x000000b2       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c2        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 *(.init9)
 *(.text)
 .text          0x000000ca        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x000000ca                __vector_22
                0x000000ca                __vector_28
                0x000000ca                __vector_1
                0x000000ca                __vector_32
                0x000000ca                __vector_34
                0x000000ca                __vector_24
                0x000000ca                __bad_interrupt
                0x000000ca                __vector_6
                0x000000ca                __vector_31
                0x000000ca                __vector_3
                0x000000ca                __vector_23
                0x000000ca                __vector_30
                0x000000ca                __vector_25
                0x000000ca                __vector_11
                0x000000ca                __vector_13
                0x000000ca                __vector_17
                0x000000ca                __vector_19
                0x000000ca                __vector_7
                0x000000ca                __vector_27
                0x000000ca                __vector_5
                0x000000ca                __vector_33
                0x000000ca                __vector_4
                0x000000ca                __vector_9
                0x000000ca                __vector_2
                0x000000ca                __vector_21
                0x000000ca                __vector_15
                0x000000ca                __vector_29
                0x000000ca                __vector_8
                0x000000ca                __vector_26
                0x000000ca                __vector_14
                0x000000ca                __vector_10
                0x000000ca                __vector_18
                0x000000ca                __vector_20
 .text          0x000000ce        0x0 lab1.o
 .text          0x000000ce      0x1e0 TimersGCC644.o
                0x00000144                __vector_12
                0x0000023e                task1
                0x00000220                task2
                0x0000025c                main
                0x000001a4                initialize
                0x000000ce                __vector_16
 .text          0x000002ae      0x1d8 uart.o
                0x000002f4                uart_getchar
                0x000002ae                uart_init
                0x000002bc                uart_putchar
 .text          0x00000486        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text          0x00000486        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text          0x00000486        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(fputs.o)
 .text          0x00000486        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(iob.o)
                0x00000486                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000486        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x00000486        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000486       0x56 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(fputs.o)
                0x00000486                fputs
                0x000004dc                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000004dc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                0x000004dc                exit
                0x000004dc                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000004dc        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x000004e0                _etext = .

.data           0x00800100       0x72 load address 0x000004e0
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 .data          0x00800100        0x0 lab1.o
 .data          0x00800100       0x6a TimersGCC644.o
                0x0080015c                uart_str
 .data          0x0080016a        0x8 uart.o
 .data          0x00800172        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .data          0x00800172        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .data          0x00800172        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(fputs.o)
 .data          0x00800172        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(iob.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800172                . = ALIGN (0x2)
                0x00800172                _edata = .
                0x00800172                PROVIDE (__data_end, .)

.bss            0x00800172       0x6e
                0x00800172                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800172        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 .bss           0x00800172        0x0 lab1.o
 .bss           0x00800172        0x0 TimersGCC644.o
 .bss           0x00800172       0x52 uart.o
 .bss           0x008001c4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .bss           0x008001c4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .bss           0x008001c4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(fputs.o)
 .bss           0x008001c4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(iob.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008001c4       0x16 TimersGCC644.o
                0x008001c4                T1poll
                0x008001c6                lastT1poll
                0x008001c8                lastT1capture
                0x008001ca                tsk1m1
                0x008001cc                time1
                0x008001ce                lastACObit
                0x008001cf                T1capture
                0x008001d1                time3
                0x008001d3                period
                0x008001d5                periodPoll
                0x008001d7                ACObit
                0x008001d8                time2
 COMMON         0x008001da        0x6 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(iob.o)
                0x008001da                __iob
                0x008001e0                PROVIDE (__bss_end, .)
                0x000004e0                __data_load_start = LOADADDR (.data)
                0x00000552                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008001e0        0x0
                0x008001e0                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008001e0                PROVIDE (__noinit_end, .)
                0x008001e0                _end = .
                0x008001e0                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 TimersGCC644.o
 .debug_aranges
                0x00000020       0x20 uart.o

.debug_pubnames
                0x00000000      0x144
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x102 TimersGCC644.o
 .debug_pubnames
                0x00000102       0x42 uart.o

.debug_info     0x00000000      0x4d5
 *(.debug_info)
 .debug_info    0x00000000        0x0 lab1.o
 .debug_info    0x00000000      0x2b5 TimersGCC644.o
 .debug_info    0x000002b5      0x220 uart.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x247
 *(.debug_abbrev)
 .debug_abbrev  0x00000000        0x1 lab1.o
 .debug_abbrev  0x00000001      0x107 TimersGCC644.o
 .debug_abbrev  0x00000108      0x13f uart.o

.debug_line     0x00000000      0x471
 *(.debug_line)
 .debug_line    0x00000000       0x24 lab1.o
 .debug_line    0x00000024      0x21e TimersGCC644.o
 .debug_line    0x00000242      0x22f uart.o

.debug_frame    0x00000000       0xb0
 *(.debug_frame)
 .debug_frame   0x00000000       0x70 TimersGCC644.o
 .debug_frame   0x00000070       0x40 uart.o

.debug_str      0x00000000      0x164
 *(.debug_str)
 .debug_str     0x00000000      0x12f TimersGCC644.o
                                0x180 (size before relaxing)
 .debug_str     0x0000012f       0x35 uart.o
                                 0xff (size before relaxing)

.debug_loc      0x00000000      0x18f
 *(.debug_loc)
 .debug_loc     0x00000000      0x18f uart.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(lab1.elf elf32-avr)
LOAD linker stubs
